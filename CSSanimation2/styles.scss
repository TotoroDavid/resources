$cameraX: 20deg;
$particleSize: 14px;
$amplitude: 100px;
$amplitudeDuration: 1000;
$rotateDuration: 10000;
$rotateDurationMin: 5000;
body {
    background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
    height: 100vh;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    perspective: 700px;
}

div {
    transform-style: preserve-3d;
}

.particles {}

.circle:nth-child(2) {
    .camera,
    .camerafollow {
        animation-delay: $rotateDuration / 3 * -1ms;
    }
}

.camera {
    &.-x {
        animation: rotateX $rotateDuration + 0ms linear infinite;
    }
    &.-y {
        animation: rotateY $rotateDuration + 0ms linear infinite;
    }
    &.-z {
        animation: rotateZ $rotateDuration + 0ms linear infinite;
    }
}

.camerafollow {
    &.-x {
        animation: rotateX $rotateDuration + 0ms linear infinite reverse;
    }
    &.-y {
        animation: rotateY $rotateDuration + 0ms linear infinite reverse;
    }
    &.-z {
        animation: rotateZ $rotateDuration + 0ms linear infinite reverse;
    }
}

.part {
    position: absolute;
    top: 50%;
    left: calc(50% + 200px);
}

.graphic {
    position: absolute;
    width: $particleSize;
    height: $particleSize;
    background: linear-gradient(0deg, rgba(#555, 1) 0%, rgba(#fff, 1) 100%);
    border-radius: 100%;
    transform: translate(-50%, -50%);
}

.rotate {
    animation: rotateY $rotateDuration + 0ms linear infinite reverse;
}

.rotatefollow {
    animation: rotateY $rotateDuration + 0ms linear infinite;
}

.particle {
    @for $i from 1 through 200 {
        $delay: (random(9999) + $rotateDuration + $rotateDurationMin) * -1ms;
        $duration: random($rotateDuration) + $rotateDurationMin + 0ms;
        $r: random(100) + 100;
        $g: random(100) + 100;
        $b: random(150) + 100;
        &:nth-child(#{$i}) {
            .part {
                left: calc(50% + #{random($amplitude * 1) + 200}px);
                animation: slide $amplitudeDuration + 0ms $delay cubic-bezier(0.445, 0.050, 0.550, 0.950) infinite alternate;
            }
            .rotate,
            .rotatefollow {
                animation-delay: $delay;
                animation-duration: $duration;
            }
            .graphic {
                background: linear-gradient(0deg, rgba($r - 50, $g - 50, $b - 50, 1) 0%, rgba($r + 50, $g + 50, $b + 50, 1) 100%);
                animation: amplitude $amplitudeDuration + 0ms $delay cubic-bezier(0.445, 0.050, 0.550, 0.950) infinite alternate;
                &::before {
                    background: linear-gradient(0deg, rgba($r, $g, $b, 0) 50%, rgba($r, $g, $b, 0.3) 100%);
                    animation: amplitudeShadow $amplitudeDuration + 0ms $delay cubic-bezier(0.445, 0.050, 0.550, 0.950) infinite alternate;
                }
            }
        }
    }
}

@keyframes rotateY {
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(360deg);
    }
}

@keyframes amplitude {
    0% {
        transform: translateY($amplitude / -2);
    }
    100% {
        transform: translateY($amplitude / 2);
    }
}

@keyframes slide {
    0% {
        transform: translateY($amplitude);
    }
    100% {
        transform: translateY(-$amplitude);
    }
}

@keyframes rotateZ {
    0% {
        transform: rotateZ(0deg);
    }
    100% {
        transform: rotateZ(360deg);
    }
}

@keyframes rotateX {
    0% {
        transform: rotateX(0deg);
    }
    100% {
        transform: rotateX(360deg);
    }
}